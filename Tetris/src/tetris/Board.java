package tetris;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.BorderFactory;
import javax.swing.JPanel;

/**
 *
 * @author galli_francesco
 */
public class Board extends javax.swing.JFrame implements KeyListener {

    static int direzione;
    Blocco block;

    public Board() {
        initComponents();
        block = new Blocco();
        addKeyListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1009, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        //</editor-fold>
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            @Override
            public void run() {
                startBoard(); 
            }
        });
    }

    private void generatePiece() {

    }

    public static void startBoard() {
        // Inizializzazione della board
        Board b = new Board();
        b.setTitle("T E T R I S");
        b.setVisible(true);
        b.setSize(1000, 1000);
        b.setResizable(false);
        b.getContentPane().setBackground(Color.black);
        b.setLayout(null);

        // Arena di gioco
        JPanel[][] tmp = new JPanel[10][20];
        Matrix m = new Matrix(tmp, b);

        m.createTable();

        gameThread gt = new gameThread(tmp, b);
        gt.start();
    }

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
        System.out.println("keyPressed");

        int key = e.getKeyCode();

        if (key == KeyEvent.VK_LEFT) {
            System.out.println("LEFT");
            direzione =  2;
        } else if (key == KeyEvent.VK_RIGHT) {
            System.out.println("RIGHT");
            direzione = 1;
        } else {
            direzione = 0;
        }
        //System.out.println("direzione: " + direzione);
    }

    @Override
    public void keyReleased(KeyEvent e) {
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
